datasource db {
  provider = "mongodb"
  url      = env("MONGO_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../types/prisma"
}

model users {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique(map: "email_1")
  firstName String
  lastName  String
  password  String
  projects  projects[]
  tasks     tasks[]
  createdAt   DateTime? @db.Date @default(now())
  updatedAt   DateTime? @db.Date @updatedAt
  v    Int    @map("__v") @default(0)
}

model projects {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  deadline    DateTime @db.Date
  description String?
  name        String
  priority    Priority
  status      ProjectStatus
  tasks       tasks[]
  user        users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String   @map("users") @db.ObjectId 
  createdAt   DateTime? @db.Date @default(now())
  updatedAt   DateTime? @db.Date @updatedAt
  v    Int    @map("__v") @default(0)
}

model tasks {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  deadline    DateTime @db.Date
  description String?
  name        String
  priority    Priority
  status      TaskStatus
  project     projects @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user        users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String   @map("users") @db.ObjectId
  projectId   String   @map("projects") @db.ObjectId
  createdAt   DateTime? @db.Date @default(now())
  updatedAt   DateTime? @db.Date @updatedAt
  v    Int    @map("__v") @default(0)
}

enum ProjectStatus {
  active
  completed
}

enum TaskStatus {
  todo
  inProgress @map("in-progress")
  completed
}

enum Priority {
  low
  moderate
  high
}
